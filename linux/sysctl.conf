#
# /etc/sysctl.conf - Configuration file for setting system variables
# See /etc/sysctl.d/ for additional system variables.
# See sysctl.conf (5) for information.
#
# The following is suitable for dedicated web server, mail, ftp server etc. 
# ---------------------------------------
# BOOLEAN Values:
# a) 0 (zero) - disabled / no / false
# b) Non zero - enabled / yes / true
# --------------------------------------

##############################################################3
# Functions previously found in netbase

#############################
# KERNEL
#############################
# Controls the System Request debugging functionality of the kernel
# See https://www.kernel.org/doc/Documentation/sysrq.txt
kernel.sysrq = 0
# Controls whether core dumps will append the PID to the core filename
# Useful for debugging multi-threaded applications
kernel.core_uses_pid = 1

# Restarts computer after 120 seconds after kernel panic
kernel.panic = 120

#Allow for more PIDs 
kernel.pid_max = 200000

kernel.threads-max=200000

#For 64-bit servers the optimal value you can use, is Half the RAM| You should make SHMALL smaller than free RAM to avoid paging.
#SHMAX This parameter defines the maximum size in bytes of a single shared memory segment that a Linux process can allocate in its virtual address space

#SHMALL This parameter sets the total amount of shared memory pages that can be used system wide. Hence, SHMALL should always be at least ceil(shmmax/PAGE_SIZE). getconf PAGE_SIZE

kernel.shmall=2621440
kernel.shmmax=10737418240


#Enable ExecShield protection
#Set value to 1 or 2 (recommended) 
kernel.exec-shield = 1
kernel.randomize_va_space=2

kernel.panic_on_oops = 1
kernel.unknown_nmi_panic=1
kernel.panic_on_unrecovered_nmi=1





######################################
# vm setting
######################################

vm.max_map_count=262144
vm.min_free_kbytes=655636 #MUST
vm.swappiness=10
vm.panic_on_oom = 1




############################
# fs
############################
# Protected links
#
# Protects against creating or following links under certain conditions
# Debian kernels have both set to 1 (restricted) 
# See https://www.kernel.org/doc/Documentation/sysctl/fs.txt
fs.protected_hardlinks=0
fs.protected_symlinks=0

# increased file descriptor
fs.file-max = 10000000
fs.nr_open  = 10000000

# file change watcher limit
fs.inotify.max_user_watches=524288





############################
# net
############################
# Allowed local port range
net.ipv4.ip_local_port_range = 1024 65535 # MUST

# Allow reuse of sockets in TIME_WAIT state for new connections
# only when it is safe from the network stackâ€™s perspective.
# Increase the tcp-time-wait buckets pool size to prevent simple DOS attacks
net.ipv4.tcp_max_tw_buckets = 1440000 # MUST
net.ipv4.tcp_tw_recycle = 1 # MUST
net.ipv4.tcp_tw_reuse = 1 # MUST

#Maximal number of remembered connection requests, which have not
#received an acknowledgment from connecting client.If server suffers from overload, try increasing this number.
net.ipv4.tcp_max_syn_backlog = 20480 #MUST

#TCP saves various connection metrics in the route cache
#when the connection closes, so that connections established in the
#	near future can use these to set initial conditions
net.ipv4.tcp_no_metrics_save = 1 #MUST

net.ipv4.tcp_fin_timeout = 15 # MUST
#https://tldp.org/HOWTO/TCP-Keepalive-HOWTO/usingkeepalive.html
#tcp_keepalive_time
####the interval between the last data packet sent (simple ACKs are not considered data) and the first keepalive probe; after the connection is marked to need keepalive, this counter is not used any further
#tcp_keepalive_intvl
####the interval between subsequential keepalive probes, regardless of what the connection has exchanged in the meantime
#tcp_keepalive_probes
####the number of unacknowledged probes to send before considering the connection dead and notifying the application layer
net.ipv4.tcp_keepalive_time = 1200 
net.ipv4.tcp_keepalive_intvl = 60 
net.ipv4.tcp_max_orphans = 65535 

# Increase the maximum amount of option memory buffers
net.core.optmem_max = 25165824

# Increase number of incoming connections
net.core.somaxconn = 60000 #MUST

# Increase number of incoming connections backlog
net.core.netdev_max_backlog = 16384  # MUST
net.core.dev_weight = 64

# increase Linux auto tuning TCP buffer limits
net.core.rmem_max = 16777216 #MUST
net.core.wmem_max = 16777216 #MUST
net.ipv4.tcp_window_scaling = 1
net.core.rmem_default = 8388608
net.core.wmem_default = 8388608

# Increase the connection track table size
net.ipv4.netfilter.ip_conntrack_max = 999999

# Increase the tcp read-buffer & write-buffer space allocatable
net.ipv4.tcp_mem = 786432 1697152 1945728 #MUST
net.ipv4.tcp_rmem = 4096 4096 16777216 #MUST
net.ipv4.tcp_wmem = 4096 4096 16777216 #MUST

# Protect Against TCP Time-Wait
net.ipv4.tcp_rfc1337 = 1


# Only groups within this id range can use ping.
net.ipv4.ping_group_range=999 59999


# Controls IP packet forwarding
net.ipv4.ip_forward=1

# Do not accept IP source route packets (we are not a router)
# The source routing feature includes some known vulnerabilities.
net.ipv4.conf.all.accept_source_route = 0
net.ipv6.conf.all.accept_source_route = 0

# the next line to enable TCP/IP SYN cookies
# See http://lwn.net/Articles/277146/
# Note: This may impact IPv6 TCP sessions too
# Controls the use of TCP syncookies
# Turn on SYN-flood protections
# Prevents SYN DOS attacks. Applies to ipv6 as well, despite name.
net.ipv4.tcp_syncookies = 1
net.ipv4.tcp_synack_retries = 5 #MUST
net.ipv4.tcp_syn_retries = 2 #MUST

# Uncomment the next two lines to enable Spoof protection (reverse-path filter)
# Turn on Source Address Verification in all interfaces to
# prevent some spoofing attacks
# Controls source route verification
net.ipv4.conf.default.rp_filter=1
# Enable source validation by reversed path, as specified in RFC1812
net.ipv4.conf.all.rp_filter=1

## Enable IPv6 Privacy Extensions (see RFC4941 and RFC3041)
net.ipv6.conf.default.use_tempaddr = 2
net.ipv6.conf.all.use_tempaddr = 2

# Send redirects, if router, but this is just server
# So no routing allowed 
net.ipv4.conf.all.send_redirects = 0
net.ipv4.conf.default.send_redirects = 0


# Accept Redirects? No, this is not router
# Do not accept ICMP redirects (prevent MITM attacks)
# Additional settings - these settings can improve the network
# security of the host and prevent against some network attacks
# including spoofing attacks and man in the middle attacks through
# redirection
net.ipv4.conf.all.accept_redirects = 0
net.ipv4.conf.all.secure_redirects = 0
net.ipv6.conf.all.accept_redirects = 0

# Uncomment the next line to enable packet forwarding for IPv6
#  Enabling this option disables Stateless Address Autoconfiguration
#  based on Router Advertisements for this host
#net.ipv6.conf.all.forwarding=1



# Log packets with impossible addresses to kernel log? yes
net.ipv4.conf.all.log_martians = 1
net.ipv4.conf.default.accept_source_route = 0
net.ipv4.conf.default.accept_redirects = 0
net.ipv4.conf.default.secure_redirects = 0

# Ignore all ICMP ECHO and TIMESTAMP requests sent to it via broadcast/multicast
net.ipv4.icmp_echo_ignore_broadcasts = 1


###################################
## IPv6 networking start 
###################################
# Number of Router Solicitations to send until assuming no routers are present.
# This is host and not router
net.ipv6.conf.default.router_solicitations = 0
 
# Accept Router Preference in RA?
net.ipv6.conf.default.accept_ra_rtr_pref = 0
 
# Learn Prefix Information in Router Advertisement
net.ipv6.conf.default.accept_ra_pinfo = 0
 
# Setting controls whether the system will accept Hop Limit settings from a router advertisement
net.ipv6.conf.default.accept_ra_defrtr = 0
 
#router advertisements can cause the system to assign a global unicast address to an interface
net.ipv6.conf.default.autoconf = 0
 
#how many neighbor solicitations to send out per address?
net.ipv6.conf.default.dad_transmits = 0
 
# How many global unicast IPv6 addresses can be assigned to each interface?
net.ipv6.conf.default.max_addresses = 1
